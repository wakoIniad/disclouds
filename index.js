const discord=require("discord.js");
const EV=require("events");const DBmark="*DBcord's DB";let list=[];async function getIDlist(messages){var idNote=[...await messages.fetch({ limit:99 })].filter(msg=>msg[1].embeds&&msg[1].embeds[0].title&&msg[1].embeds[0].title.startsWith("^IDLIST")).map(msg=>msg[1]);if(!idNote[0]||!idNote[0].embeds||!idNote[0].embeds[0])return[];idNote=idNote[0].embeds[0];return new Promise((resolve,reject)=>{var text=null;re(idNote);function re(embed){var body=embed.description;var type=embed.title;if(type.endsWith('$')){if(type.endsWith('[$')){text=body;}else if(type.endsWith(',$')){text+=body;}else if(type.endsWith(']$')){if(type.endsWith('$[]$')){text=body;}else{text+=body;};resolve(...[text.split(',')]);};}else{var arr=body.split(',');arr.forEach(async f=>{var msg=await messages.fetch(f);var em=msg.embeds[0];re(em);});};};});};async function makeKey(list){return new Promise((resolve,reject)=>{function re(){var KEY=Math.random()*1;if(!list.includes(KEY)){resolve(KEY);}else{setTimeout(re,10);};};re();});};function encryption(raw,that){return crypto(escape(raw),that);};function decryption(encrypted,that){return unescape(crypto(encrypted,that));};function crypto(raw,that){var str = raw;if(!that.keyA||!that.keyB)throw'please set key';keyw=that.keyA+that.keyB;pt=0;str2="";for(nn=0;nn<str.length;++nn){asc=str.charAt(nn).charCodeAt();keyw2=keyw.charAt(pt).charCodeAt()&0x0F;++pt;if(pt>=keyw.length)pt=0;asc=asc^keyw2;str2=str2+String.fromCharCode(asc);};return str2;};async function getProcess(that,json){var server=that.client.guilds.cache.get(that.server);if(!server)throw'server is not find';var channel=server.channels.cache.get(that.channel);if(!channel)throw'channel is not find';var messages=channel.messages;var IDLIST=await getIDlist(messages);var tables=IDLIST;var data=await tables.reduce(async(r,t)=>{r=await r;var table=await messages.fetch(t);if(!table)throw'a table not find';r+=table.embeds[0].description;return r;},"");if(that.encode){data=await decryption(data,that);};if(json){data=JSON.parse(data);};return data;}async function setProcess(that,data){var startTime=process.hrtime();const res=await new Promise(async(resolve,reject)=>{data=JSON.stringify(data);if(that.encode){data=encryption(data,that);};var server=that.client.guilds.cache.get(that.server);if(!server){throw'server is not find';};var channel=server.channels.cache.get(that.channel);if(!channel){throw'channel is not find';};var messages=channel.messages;var IDLIST=await getIDlist(messages);var conv=[...data];var split=conv.reduce((acc,c,i)=>i%2000?acc:[...acc,conv.slice(i,i+2000).join('')],[]);var tables=IDLIST.slice();var $tables=IDLIST.slice();var newTables=await(Object.keys(split)).reduce(async(r,t)=>{r=await r;var pack=split[t];var tableID=$tables[t];var table=null;if(!tableID){var table=await channel.send({embed:{title:'*DBBody',description:pack}});tableID=table.id;}else{var table=await messages.fetch(tableID);table.edit({embed:{title:'*DBBody',description:pack}});};tables.shift();r.push(tableID);return r;},[]);tables.forEach(async t=>{var table=await messages.fetch(t);table.delete();});newTables=newTables.join(',');await re(newTables,true);async function re(text,cc){var newList=[...text].reduce((acc,c,i)=>i%2000?acc:[...acc,[...text].slice(i,i+2000).join('')],[]);var dir=await newList.reduce(async(p,f)=>{p=await p;var rep=await channel.send({embed:{title:"IDLIST"+(newList.length<=1&&"$[]$"||cc&&"$"),description:f}});p.push(rep);return p;},[]);dir[0].edit();if(dir.length>1){var msg=dir[0];var em=msg.embeds[0];em.title=em.title+(cc&&newList.length>1)&&"[";msg.edit(em);var msg=dir[dir.length-1];var em=msg.embeds[0];em.title=em.title.slice(0,em.title.length-1)+(cc&&newList.length>1)&&"$]";msg.edit(em);var idl=dir.map(m=>m.id).join(',');await re(idl,cc);}else{var msg=dir[0];var em=msg.embeds[0];em.title="^"+em.title;msg.edit(em);};};var endTime=process.hrtime(startTime);var processTime=endTime[1]/1000000;var resInfo={'setData':data,'processTime':processTime,'info':that.info()};const emitSet=(resInfo)=>{if(that.log.length<1){that.Event.emit('writeEnd');};};setTimeout(()=>emitSet(resInfo),10);resolve(resInfo);});return res;};module.exports=class{constructor(table){this.channel=null;this.server=null;this.token=null;this.client=null;this.Event=null;this.ready=false;this.keyA=null;this.keyB=null;this.encode=false;this.ENCRYPT_METHOD="aes-256-cbc";this.ENCODING="hex";this.log=[];this.setterKeys=[];this.getterKeys=[];this.mainProcess();if(table){if(table.encode){if(table.encode.use)this.encodOn();if(table.encode.key){var keys=table.encode.key;this.setKey(keys.keyA,keys.keyB);};};if(table.token){this.token=table.token;};if(table.server){this.server=table.server;};};};setting(table){if(table){if(table.encode){if(table.encode.use)this.encodOn();if(table.encode.key){var keys=table.encode.key;this.setKey(keys.keyA,keys.keyB)};};if(table.token){this.token=table.token;}if(table.server){this.server=table.server;};};};async create(token,table,startWith){const eventEmitter=new EV();this.Event=eventEmitter;if(!token&&!this.token)throw'token is not definition';this.token=token;this.client=new discord.Client();this.client.login(token);this.client.on('ready',async()=>{this.ready=true;if(!table.name)throw"channel's name is not definition";if(!this.server)this.server=table.server;var server=this.client.guilds.cache.get(this.server);if(!server)throw'this idâ€²s server is not find';var chs=server.channels;var channel=chs.cache.find(ch=>ch.name===table.name)||await chs.create(table.name,{topic:DBmark});if(list.includes(channel.id)){this.Event.emit('error',new Error('this table is already using'));throw'this table is already using';};list.push(channel.id);if(channel.type!=='text'||!channel.topic||channel.topic!==DBmark)throw'not a legitimate DBcord channel';this.channel=channel.id;var messages=channel.messages;var IDLIST=await getIDlist(messages);if(IDLIST.length>0){IDLIST=IDLIST.map(msg=>msg[1]);IDLIST=IDLIST[0];}else{var setter=JSON.stringify(startWith||"*");if(this.encode)setter=encryption(setter,this);var msg=await channel.send({embed:{title:'*DBBody',description:setter}});IDLIST=await channel.send({embed:{title:"^IDLIST$[]$",description:`${msg.id}`}});IDLIST=IDLIST.embeds[0].description;};this.Event.emit('ready');});return this.Event;};async get(json){const KEY=await makeKey(this.getterKeys);this.getterKeys.push(KEY);this.log.push(["get",KEY,json]);return await new Promise(async(resolve,reject)=>{this.Event.on('get',data=>{if(data[1]!==KEY)return;this.Event.removeListener('get',()=>{});resolve(data[0]);});});};async set(data){const KEY=await makeKey(this.setterKeys);this.setterKeys.push(KEY);this.log.push(["set",KEY,data]);return await new Promise(async(resolve,reject)=>{this.Event.on('set',data=>{if(data[1]!==KEY)return;this.Event.removeListener('set',()=>{});resolve(data[0]);});});};mainProcess(){var getPack=()=>this.log[0];var getNext=()=>this.log[1];var remove=()=>this.log.shift();var emitOnGet=(res,key)=>this.Event.emit('get',[res,key]);var emitOnSet=(res,key)=>this.Event.emit('set',[res,key]);var set=async(data)=>await setProcess(this,data);var get=async(json)=>await getProcess(this,json);var evMaxSet=()=>this.Event.setMaxListeners(this.Event.getMaxListeners()+10);var ready=()=>this.ready;async function loop(){var pack=getPack();var next=getNext();if(!pack||(pack[0]==="set"&&next&&next[0]==="set")||!ready()){if(pack)remove();setTimeout(loop,100);}else{evMaxSet();var type=pack[0];var key=pack[1];if(type==="set"){try {const res=await set(pack[2]);emitOnSet(res,key);remove();} catch(error){throw error.message;} finally {setTimeout(loop,10);}}else{try {const res=await get(pack[2]);emitOnGet(res,key);remove();} catch(error){throw error.messages;} finally {setTimeout(loop,10);};};};};loop();}info(){if(!this.ready)return null;var res={'clientID':this.client.user.id,'serverID':this.server,'channelID':this.channel,'process':this.log,'processLength':this.log.length,'now':new Date(),'sleep':this.log.length<1,'writeProcess':this.setterKeys,'readProcess':this.getterKeys,};return res;};encodOn(){this.encode=true;};setKey(keyA,keyB){if(!(keyA.length===32&&(/^([a-z]|[0-9]){32}$/i).test(keyA)))throw'please use 32 alphanumeric characters';if(!(keyB.length===16&&(/^([a-z]|[0-9]){16}$/i).test(keyB)))throw'please use 16 alphanumeric characters';this.keyA=keyA;this.keyB=keyB;};setServer(id){this.server=id;};};